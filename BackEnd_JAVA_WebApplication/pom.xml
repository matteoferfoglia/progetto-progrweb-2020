<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <version>1-0-0</version>

    <groupId>it.units.progrweb</groupId>
    <artifactId>progetto-progrweb-2020</artifactId>

    <name>Progetto Programmazione Web</name>
    <description>Progetto d'esame del corso di Programmazione Web. Anno Accademico: 2019-2020.</description>

    <developers>
        <developer>
            <name>Matteo Ferfoglia</name>
            <email>matteoferfoglia@gmail.com</email>
            <url>https://github.com/matteoferfoglia</url>
            <organization>Università degli Studi di Trieste</organization>
            <properties>
                <picUrl>https://github.com/matteoferfoglia.png?size=100</picUrl>
            </properties>
        </developer>
    </developers>

    <properties>
        <project.id.appengine>progettoprogrweb2020</project.id.appengine>                        <!-- ID del progetto AppEngine -->
        <project.url.applicazione>${project.id.appengine}.appspot.com</project.url.applicazione> <!-- URL dell'applicazione web -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
        <archiveClasses>true</archiveClasses>
        <vue.project.directory>../FrontEnd_VUE</vue.project.directory><!-- directory contenente il progetto Vue -->
        <vue.build.target.directory>${vue.project.directory}/dist</vue.build.target.directory><!-- directory contenente la build del progetto Vue -->
        <swagger.path.openapi.json>/api/openapi.json</swagger.path.openapi.json><!-- request URI in cui è disponibile in formato JSON la documentazione delle API, generata da Swagger -->
    </properties>

    <url>${project.url.applicazione}</url>

    <dependencies>

        <!-- Compile/runtime dependencies -->

        <!-- AppEngine -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>1.9.84</version>
            <exclusions>
                <exclusion>
                    <!-- Evita il warn WARN:oeja.AnnotationParser:qtp1122606666-18: javax.inject.Inject scanned from multiple locations -->
                    <groupId>javax.inject</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.appengine.tools</groupId>
            <artifactId>appengine-gcs-client</artifactId>
            <version>0.8.1</version>
            <exclusions>
                <exclusion>
                    <!-- Evita il warn WARN:oeja.AnnotationParser:qtp1122606666-18: javax.inject.Inject scanned from multiple locations -->
                    <groupId>javax.inject</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Firebase -->
        <dependency>
            <groupId>com.google.firebase</groupId>
            <artifactId>firebase-admin</artifactId>
            <version>6.8.1</version>
        </dependency>

        <!-- Java Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>

        <!-- Jersey! -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>2.28</version>
            <exclusions>
                <exclusion>
                    <!-- Evita il warn :WARN:oeja.AnnotationParser:qtp1122606666-22: javax.validation.BootstrapConfiguration scanned from multiple locations -->
                    <groupId>javax.validation</groupId>
                    <artifactId>validation-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-mvc</artifactId>
            <version>2.28</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-mvc-jsp</artifactId>
            <version>2.28</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>2.28</version>
            <exclusions>
                <exclusion>
                    <!-- Evita il warn WARN:oeja.AnnotationParser:qtp1932831450-15: javax.json.* scanned from multiple locations -->
                    <groupId>jakarta.json</groupId>
                    <artifactId>jakarta.json-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency><!-- Per @FormDataParam utilizzato nel caricamento file via MULTIPART_FORM_DATA, Fonte: https://stackoverflow.com/a/29227044 -->
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>2.28</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>2.28</version>
        </dependency>

        <!-- Le seguenti dipendenze evitano l'errore SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder"
             Fonte: https://stackoverflow.com/a/9919375 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.25</version>
        </dependency>
        <!-- fine Jersey! -->

        <!-- Objectify -->
        <dependency>
            <groupId>com.googlecode.objectify</groupId>
            <artifactId>objectify</artifactId>
            <version>5.1.24</version>
        </dependency>

        <!-- Gestione mail -->
        <!-- Dependency compresa tra quelle di appengine
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.5.0-b01</version>
        </dependency> -->

        <!-- OWASP Java Encoder, https://owasp.org/owasp-java-encoder/encoder/index.html per encoding -->
        <dependency>
            <groupId>org.owasp.encoder</groupId>
            <artifactId>encoder</artifactId>
            <version>1.2.3</version>
        </dependency>

        <!-- SWAGGER -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2</artifactId>
            <version>2.1.7</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.12.2</version>
        </dependency>
        <!-- Fine SWAGGER -->



        <!-- Test Dependencies -->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit</groupId>
            <artifactId>junit-bom</artifactId>
            <version>5.7.0</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>1.9.84</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>1.9.84</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-tools-sdk</artifactId>
            <version>1.9.84</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <!-- Server locale AppEngine -->
        <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
        <plugins>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
                <version>2.4.0</version>
                <configuration>
                    <projectId>${project.id.appengine}</projectId>
                    <version>${project.version}</version><!-- Versione del progetto da caricare su appengine -->
                    <jvmFlags>
                        <jvmFlag>-Xdebug</jvmFlag>
                        <jvmFlag>-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005</jvmFlag>
                    </jvmFlags>
                    <devserver.host>0.0.0.0</devserver.host> <!-- Server locale in ascolto su 0.0.0.0 ed accessibile dalla rete locale con IP (e porta) della macchina su cui è in esecuzione -->
                    <devserver.port>8910</devserver.port>    <!-- Porta del server locale-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.8.1</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>display-dependency-updates</goal>
                            <goal>display-plugin-updates</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>javax.servlet:javax.servlet-api</exclude>
                        <exclude>com.google.guava:guava</exclude> <!-- avoid android version -->
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>

            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>3.0.0-M1</version>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>

            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.9.1</version>
            </plugin>

            <!-- Crea la build del progetto Vue
                 Fonte: https://stackoverflow.com/a/62535901, https://github.com/eirslett/frontend-maven-plugin#running-npm -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.11.3</version>

                <configuration>
                    <workingDirectory>${vue.project.directory}</workingDirectory>
                    <nodeVersion>v14.15.1</nodeVersion>

                    <!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
                    <npmVersion>6.14.8</npmVersion>

                    <!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
                    <!-- <downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot> -->
                </configuration>

                <executions>
                    <execution>
                        <!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
                        <id>Install Node.js and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                    </execution>

                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <!-- Copia della build Vue in webapp
                 Fonte (tratto da): https://stackoverflow.com/q/28584442 -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${vue.build.target.directory}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0-M1</version>
            </plugin>

            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.5</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- swagger -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.webjars</groupId>
                                    <artifactId>swagger-ui</artifactId>
                                    <version>3.25.0</version>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/swagger-ui</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <webResources combine.children="append">
                        <resource>
                            <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/3.25.0</directory>
                            <includes>
                                <include>**/*.*</include>
                            </includes>
                            <targetPath>swagger-ui</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <file>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/3.25.0/index.html</file>
                    <replacements>
                        <replacement>
                            <token>https://petstore.swagger.io/v2/swagger.json</token>
                            <value>${swagger.path.openapi.json}</value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>
            <!-- fine swagger -->

        </plugins>
    </build>


    <!-- Javadoc sarà generato durante la fase mvn site, Fonte: https://maven.apache.org/plugins/maven-javadoc-plugin/usage.html -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.1.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <!-- Mostra anche i campi privati in Javadoc, Fonte: https://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html#show -->
                    <show>private</show>

                    <!-- Ignora verifiche doclint su Javadoc -->
                    <doclint>none</doclint>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

</project>